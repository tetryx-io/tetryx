import useTheme from "@/lib/hooks/useTheme";

const glideDataGridTheme = (containerRef: any, className: string) => {
  const {
    accentColor,
    accentFg,
    accentLight,
    textDark,
    textMedium,
    textLight,
    textBubble,
    bgIconHeader,
    fgIconHeader,
    textHeader,
    textGroupHeader,
    textHeaderSelected,
    bgCell,
    bgCellMedium,
    bgHeader,
    bgHeaderHasFocus,
    bgHeaderHovered,
    bgBubble,
    bgBubbleSelected,
    bgSearchResult,
    borderColor,
    horizontalBorderColor,
    drilldownBorder,
    linkColor,
    cellHorizontalPadding,
    cellVerticalPadding,
    headerFontStyle,
    baseFontStyle,
    markerFontStyle,
    fontFamily,
    editorFontSize,
  } = useTheme(containerRef, className);

  return {
    accentColor,
    accentFg,
    accentLight,
    textDark,
    textMedium,
    textLight,
    textBubble,
    bgIconHeader,
    fgIconHeader,
    textHeader,
    textGroupHeader,
    textHeaderSelected,
    bgCell,
    bgCellMedium,
    bgHeader,
    bgHeaderHasFocus,
    bgHeaderHovered,
    bgBubble,
    bgBubbleSelected,
    bgSearchResult,
    borderColor,
    horizontalBorderColor,
    drilldownBorder,
    linkColor,
    cellHorizontalPadding,
    cellVerticalPadding,
    headerFontStyle,
    baseFontStyle,
    markerFontStyle,
    fontFamily,
    editorFontSize,
  };
};

export default glideDataGridTheme;
